{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","title","activeLink","className","style","color","mode","Navbar","to","type","id","active","aboutText","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","modifiedText","setModifiedText","heading","rows","value","onChange","event","target","backgroundColor","toUpperCase","showAlert","toLowerCase","content","document","getElementById","select","navigator","clipboard","writeText","replaceAll","length","trim","split","readOnly","defaultProps","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","setActive","message","setTimeout","showTitle","input","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9794c365.chunk.js","sourcesContent":["// import React, { useState } from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n   // const [myStyle, setMyStyle] = useState({\r\n   //    color: 'black',\r\n   //    backgroundColor: 'white'\r\n   // });\r\n\r\n   // const [btnText, setBtnText] = useState(\"Enable Dark Mode\");\r\n\r\n   // const modeToggleSwitch = () => {\r\n   //    if (myStyle.color === 'white') {\r\n   //       setMyStyle({\r\n   //          color: 'black',\r\n   //          backgroundColor: 'white'\r\n   //       })\r\n   //       setBtnText(\"Enable Dark Mode\");\r\n   //    }\r\n   //    else {\r\n   //       setMyStyle({\r\n   //          color: 'white',\r\n   //          backgroundColor: 'black',\r\n   //          border: '1px solid white'\r\n   //       })\r\n   //       setBtnText(\"Disable Dark Mode\");\r\n   //    }\r\n   // }\r\n\r\n\r\n   props.title(\"TextUtils - About Us\")\r\n   props.activeLink(\"about\")\r\n   return (\r\n      <>\r\n      {/* <div className=\"container\" style={myStyle}> */}\r\n      <div className=\"container\" style={{color:props.mode==='dark'?'#e0dddd':'black'}}>\r\n\r\n         <h1 className=\"my-3 customInlineDisplay\" >About Us</h1>\r\n\r\n         <br/>\r\n         This TextUtils is developed by Abc .\r\n         <br/>\r\n         Lorem ipsum dolor sit amet consectetur adipisicing elit. Iste ullam illo laboriosam sit cumque? Adipisci, vitae reiciendis neque accusamus atque esse iste dolor ut sint est explicabo consequatur nobis recusandae ab quos in hic.\r\n         {/* <div className=\"justify-content-end\">\r\n               <button type=\"buttton\" className=\"btn btn-outline-dark\" style={myStyle} onClick={modeToggleSwitch}>{btnText}</button>\r\n            </div> */}\r\n      </div>\r\n      </>\r\n   )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n   return (\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n         <div className=\"container-fluid\">\r\n            <Link className=\"navbar-brand\" to=\"/\">TextUtils</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n               <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n               <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                  <li className=\"nav-item\">\r\n                     <Link className={`nav-link ${props.active===\"home\"?\"active\":\"\"}`} aria-current=\"page\" to=\"/\">Home</Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                     <Link className={`nav-link ${props.active===\"about\"?\"active\":\"\"}`} to=\"/about\">{props.aboutText}</Link>\r\n                  </li>\r\n               </ul>\r\n               <form className=\"d-flex\">\r\n                  {/* <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                  <button className=\"btn btn-primary\" type=\"submit\">Search</button> */}\r\n                  <div className=\"form-check form-switch\">\r\n                     <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n                     <label className={`form-check-label text-${props.mode==='dark'?'light':'dark'}`} htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode==='dark'?'Light':'Dark'} Mode</label>\r\n                  </div>\r\n               </form>\r\n            </div>\r\n         </div>\r\n      </nav>\r\n   );\r\n}\r\n\r\n\r\nNavbar.propTypes = {\r\n   aboutText: PropTypes.string,\r\n   mode: PropTypes.string\r\n}\r\nNavbar.defaultProps = {\r\n   aboutText: \"About\",\r\n   mode: \"light\"\r\n}","import React, { useState } from 'react' //imr\r\n// import {StyleSheet} from 'react';\r\n\r\n\r\n\r\nexport default function TextForm(props) {  //rfc\r\n\r\n   const [text, setText] = useState(\"\"); //hooks [stateVariable, setStateFunction]\r\n   // text=\"some modified test\" //wrong way to change state\r\n   // setText(\"some modified text\") //correct way to change state\r\n\r\n   const [modifiedText, setModifiedText] = useState(\"\");\r\n\r\n   const upperCaseClick = () => {\r\n      setModifiedText(text.toUpperCase())\r\n      props.showAlert(\"Text is converted to UPPERCASE\",\"success\")\r\n      // console.log(\"text :\"+text)\r\n      // console.log(\"modifiedText :\"+modifiedText) // not updating old value comming here, but actually changing\r\n      // console.log(modifiedText.split(\" \").length)\r\n      // console.log(modifiedText.split(\" \"))\r\n   }\r\n\r\n   const lowerCaseClick = () => {\r\n      setModifiedText(text.toLowerCase())\r\n      props.showAlert(\"Text is converted to lowercase\",\"success\")\r\n   }\r\n\r\n   const clearText = () => {\r\n      setModifiedText(\"\")\r\n      setText(\"\")\r\n      props.showAlert(\"Text is cleared\",\"success\")\r\n   }\r\n\r\n   const copyModifiedText = () => {\r\n      var content = document.getElementById(\"myBoxModified\") //old\r\n      content.select() //select at UI\r\n      navigator.clipboard.writeText(content.value)\r\n      props.showAlert(\"Modified Text is copied to Clipboard\",\"success\")\r\n   }\r\n\r\n   const removeExtraSpace=()=>{\r\n      setModifiedText(text.replaceAll(/[ ]+/ig,\" \"))\r\n      props.showAlert(\"Extra spaces are removed from Text\",\"success\")\r\n   }\r\n\r\n   const handleOnChange = (event) => {\r\n      setText(event.target.value)\r\n   }\r\n\r\n   props.title(\"TextUtils - Home\")\r\n   props.activeLink(\"home\")\r\n   return (\r\n      <>\r\n         <div className=\"container\" style={{color:props.mode==='dark'?'#e0dddd':'black'}}>\r\n            <h2 >{props.heading}</h2>\r\n            <div className=\"mb-3\">\r\n               <textarea className=\"form-control\" id=\"myBox\" rows=\"5\" value={text} onChange={handleOnChange}\r\n               style={{backgroundColor:props.mode==='dark'?'#3f4c58':'white',color:props.mode==='dark'?'#e0dddd':'black'}}></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-3\" onClick={upperCaseClick}>UpperCase</button>\r\n            <button className=\"btn btn-primary mx-3\" onClick={lowerCaseClick}>LowerCase</button>\r\n            <button className=\"btn btn-primary mx-3\" onClick={clearText}>Clear</button>\r\n            <button className=\"btn btn-primary mx-3\" onClick={copyModifiedText}>Copy Modified</button>\r\n            <button className=\"btn btn-primary mx-3\" onClick={removeExtraSpace}>Remove Extra Spaces</button>\r\n            <button className=\"btn btn-primary mx-3\" >Capitalize</button>\r\n            <button className=\"btn btn-primary mx-3\" >Orignal</button>\r\n            {/* <button className=\"btn btn-primary mx-3\" >Undo</button>\r\n            <button className=\"btn btn-primary mx-3\" >Redo</button> */}\r\n         </div>\r\n         <div className=\"container my-3 \" style={{color:props.mode==='dark'?'#e0dddd':'black'}}>\r\n            <h2 className=\"customInlineDisplay mb-3\">Modified Text</h2>\r\n            <div className=\"customInlineDisplay mx-3\"> ( Summary : Total {modifiedText.length} characters &amp; {modifiedText === \"\" ? 0 : modifiedText.trim().split(\" \").length} words )</div>\r\n               <textarea className=\"form-control\" id=\"myBoxModified\" rows=\"5\" value={modifiedText === \"\" ? \"Enter something to Preview\" : modifiedText} \r\n                style={{backgroundColor:props.mode==='dark'?'#3f4c58':'white',color:props.mode==='dark'?'#e0dddd':'black'}} readOnly></textarea>\r\n         </div>\r\n\r\n      </>\r\n\r\n   )\r\n}\r\n","import React from 'react'  //rfce\r\n\r\nfunction Alert(props) {\r\n   const capitalize=(word)=>{\r\n      const lower=word.toLowerCase()\r\n      return lower.charAt(0).toUpperCase()+lower.slice(1)\r\n   }\r\n   return (\r\n      props.alert && <div>\r\n         <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}!</strong> {props.alert.msg}.\r\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Alert\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar'\nimport TextForm from './components/TextForm'\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  // Link\n} from \"react-router-dom\";\n\n\nlet about = \"About Us\";\nfunction App() {\n  // const [darkMode, setDarkMode] = useState(false)\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n  const [active, setActive] = useState(\"home\")\n  // const [title, setTitle] = useState(\"TextUtils\")\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1000);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = '#2d3740'\n      showAlert(\"Dark mode is enabled\", \"success\")\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light mode is enabled\", \"success\")\n    }\n  }\n\n  // const titleBlink=(number)=>{\n  //   setInterval(() => {\n  //     document.title=\"TextUtils - Home\"\n  //   }, 500);\n  //   setInterval(() => {\n  //     document.title=`TextUtils - Home (${number})`\n  //   }, 1000);\n  // }\n\n\n  const showTitle=(title)=>{\n    document.title=title\n  }\n\n  const activeLink=(input)=>{\n    setActive(input);\n  }\n\n  return (\n    <>\n      {/* {titleBlink(4)} */}\n\n      <Router>\n      <Navbar aboutText={about} mode={mode} toggleMode={toggleMode} active={active}/>\n      <Alert alert={alert} />\n      <div className=\"container my-4\">\n          <Switch>\n            <Route exact path=\"/about\">\n              <About mode={mode} title={showTitle} activeLink={activeLink}/>\n            </Route>\n            <Route exact path=\"/\">\n              {/* <Home /> */}\n              <TextForm heading=\"Enter the text to analyze below\" mode={mode} showAlert={showAlert} \n              title={showTitle} activeLink={activeLink} />\n            </Route>\n          </Switch>\n      </div>\n      </Router>\n\n    </>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}